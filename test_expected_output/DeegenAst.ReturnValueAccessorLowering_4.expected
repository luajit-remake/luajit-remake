; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { ptr, ptr, ptr, %1, i32 }
%1 = type { i32 }

@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test4_0_retcont_0(ptr %0, ptr nocapture readonly %1, ptr nocapture readnone %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readonly %retStart, i64 %numRet, ptr %5, i64 %6, i64 %7, double %8, double %9, double %10, double %11, double %12, double %13) #0 section "deegen_interpreter_code_section_hot" {
  %15 = getelementptr %0, ptr %1, i64 -1, i32 1
  %16 = load ptr, ptr %15, align 8, !tbaa !2
  %17 = getelementptr %0, ptr %1, i64 -1, i32 3
  %18 = load i32, ptr %17, align 4, !tbaa !9
  %19 = zext i32 %18 to i64
  %20 = ptrtoint ptr %5 to i64
  %21 = add i64 %19, %20
  %22 = inttoptr i64 %21 to ptr
  %23 = getelementptr inbounds %0, ptr %16, i64 -1
  %24 = load ptr, ptr %23, align 8, !tbaa !10
  %25 = load i32, ptr %24, align 4, !tbaa !11
  %26 = getelementptr inbounds i8, ptr %22, i64 2
  %27 = load i32, ptr %26, align 1
  %28 = tail call noundef i64 @_Z2a1v() #2
  %29 = icmp ult i64 %28, %numRet
  br i1 %29, label %30, label %__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit

30:                                               ; preds = %14
  %31 = getelementptr inbounds i64, ptr %retStart, i64 %28
  %32 = load i64, ptr %31, align 8, !tbaa !13
  br label %__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit

__DeegenImpl_CommonSnippetLib_GetReturnValueAtSpecifiedOrdinal.exit: ; preds = %30, %14
  %.0.reg2mem.0.i = phi i64 [ %32, %30 ], [ %7, %14 ]
  %outputSlot = zext i32 %27 to i64
  %33 = zext i32 %25 to i64
  %34 = add i64 %33, %20
  %35 = inttoptr i64 %34 to ptr
  %36 = getelementptr inbounds i64, ptr %16, i64 %outputSlot
  store i64 %.0.reg2mem.0.i, ptr %36, align 8
  %37 = getelementptr inbounds i8, ptr %22, i64 10
  %38 = load i16, ptr %37, align 1
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %39
  %41 = load ptr, ptr %40, align 8
  musttail call ghccc void %41(ptr %0, ptr nonnull %16, ptr nonnull %37, ptr %35, i64 %4, ptr undef, i64 undef, ptr %5, i64 undef, i64 %7, double undef, double undef, double undef, double undef, double undef, double undef) #2
  ret void
}

declare dso_local noundef i64 @_Z2a1v() local_unnamed_addr #1

attributes #0 = { nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!3, !4, i64 8}
!3 = !{!"_ZTS16StackFrameHeader", !4, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !8, i64 28}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"_ZTS17SystemHeapPointerIhE", !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!7, !8, i64 0}
!10 = !{!3, !4, i64 0}
!11 = !{!12, !8, i64 0}
!12 = !{!"_ZTS17SystemHeapPointerI14ExecutableCodeE", !8, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"long", !5, i64 0}