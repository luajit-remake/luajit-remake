; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/return_value_accessor_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { ptr, ptr, ptr, %1, i32 }
%1 = type { i32 }

@__deegen_interpreter_dispatch_table = external dso_local local_unnamed_addr constant [0 x ptr], align 8

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test5_0_retcont_0(ptr %0, ptr nocapture readonly %1, ptr nocapture readnone %2, ptr nocapture readnone %3, i64 %4, ptr nocapture readonly %retStart, i64 %numRet, ptr %vmBasePointer, i64 %5, i64 %6, double %7, double %8, double %9, double %10, double %11, double %12) #0 section "deegen_interpreter_code_section_hot" {
  %14 = getelementptr %0, ptr %1, i64 -1, i32 1
  %15 = load ptr, ptr %14, align 8, !tbaa !2
  %16 = getelementptr %0, ptr %1, i64 -1, i32 3
  %17 = load i32, ptr %16, align 4, !tbaa !9
  %18 = getelementptr inbounds %0, ptr %15, i64 -1
  %19 = load ptr, ptr %18, align 8, !tbaa !10
  %20 = load i32, ptr %19, align 4, !tbaa !11
  %21 = tail call noundef ptr @_Z2d1v() #4
  %22 = tail call noundef i64 @_Z2a1v() #4
  %23 = icmp ugt i64 %22, %numRet
  %24 = tail call i64 @llvm.umin.i64(i64 %numRet, i64 %22)
  %25 = shl i64 %24, 3
  tail call void @llvm.memmove.p0.p0.i64(ptr align 8 %21, ptr align 8 %retStart, i64 %25, i1 false)
  br i1 %23, label %.lr.ph.i, label %__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit

.lr.ph.i:                                         ; preds = %.lr.ph.i, %13
  %.014.reg2mem.0.i = phi i64 [ %27, %.lr.ph.i ], [ %numRet, %13 ]
  %26 = getelementptr inbounds i64, ptr %21, i64 %.014.reg2mem.0.i
  store i64 %6, ptr %26, align 8, !tbaa !13
  %27 = add nuw i64 %.014.reg2mem.0.i, 1
  %exitcond.not.i = icmp eq i64 %27, %22
  br i1 %exitcond.not.i, label %__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit, label %.lr.ph.i, !llvm.loop !15

__DeegenImpl_CommonSnippetLib_StoreFirstKReturnValuesPaddingNil.exit: ; preds = %.lr.ph.i, %13
  %28 = zext i32 %20 to i64
  %29 = ptrtoint ptr %vmBasePointer to i64
  %30 = add i64 %29, %28
  %31 = inttoptr i64 %30 to ptr
  %32 = zext i32 %17 to i64
  %33 = add i64 %29, %32
  %34 = inttoptr i64 %33 to ptr
  %35 = getelementptr inbounds i8, ptr %34, i64 6
  %36 = load i16, ptr %35, align 1
  %37 = zext i16 %36 to i64
  %38 = getelementptr inbounds [0 x ptr], ptr @__deegen_interpreter_dispatch_table, i64 0, i64 %37
  %39 = load ptr, ptr %38, align 8
  musttail call ghccc void %39(ptr %0, ptr %15, ptr nonnull %35, ptr %31, i64 %4, ptr undef, i64 undef, ptr %vmBasePointer, i64 undef, i64 %6, double undef, double undef, double undef, double undef, double undef, double undef) #4
  ret void
}

declare dso_local noundef ptr @_Z2d1v() local_unnamed_addr #1

declare dso_local noundef i64 @_Z2a1v() local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #2

; Function Attrs: argmemonly mustprogress nocallback nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #3

attributes #0 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!3, !4, i64 8}
!3 = !{!"_ZTS16StackFrameHeader", !4, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !8, i64 28}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"_ZTS17SystemHeapPointerIhE", !8, i64 0}
!8 = !{!"int", !5, i64 0}
!9 = !{!7, !8, i64 0}
!10 = !{!3, !4, i64 0}
!11 = !{!12, !8, i64 0}
!12 = !{!"_ZTS17SystemHeapPointerI14ExecutableCodeE", !8, i64 0}
!13 = !{!14, !14, i64 0}
!14 = !{!"long", !5, i64 0}
!15 = distinct !{!15, !16, !17, !18}
!16 = !{!"llvm.loop.mustprogress"}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = !{!"llvm.loop.vectorize.width", i32 1}