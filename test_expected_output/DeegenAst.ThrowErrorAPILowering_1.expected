; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/throw_error_api_lowering.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type { %1, %4, i32, i32, i64, i32, i32, ptr, ptr, ptr, %5, [0 x i64] }
%1 = type { %2, i8, i8, i32, ptr, %3 }
%2 = type { i8, i8 }
%3 = type { i32, i32 }
%4 = type { i64 }
%5 = type { %6 }
%6 = type { %7, %7 }
%7 = type { i32 }

@.str.3 = private unnamed_addr constant [11 x i8] c"test error\00", align 1

; Function Attrs: nounwind
define dso_local ghccc void @__deegen_interpreter_op_test1_0(ptr %coroutineCtx, ptr %stackBase, ptr %curBytecode, ptr %codeBlock, i64 %0, ptr nocapture readnone %1, i64 %2, ptr %3, i64 %4, i64 %5, double %6, double %7, double %8, double %9, double %10, double %11) local_unnamed_addr #0 section "deegen_interpreter_code_section_hot" {
  %13 = getelementptr inbounds i8, ptr %codeBlock, i64 88
  %14 = ptrtoint ptr %curBytecode to i64
  %15 = ptrtoint ptr %13 to i64
  %16 = getelementptr inbounds %0, ptr %codeBlock, i64 0, i32 4
  %17 = load i64, ptr %16, align 8, !tbaa !2
  %.neg.i = sub i64 -88, %14
  %.neg4.i = add i64 %.neg.i, %15
  %18 = add i64 %.neg4.i, %17
  store i64 %18, ptr %16, align 8, !tbaa !2
  musttail call ghccc void @DeegenInternal_UserLibFunctionTrueEntryPoint_DeegenInternal_ThrowCStringErrorImpl(ptr %coroutineCtx, ptr %stackBase, ptr nonnull @.str.3, ptr undef, i64 %0, ptr undef, i64 undef, ptr %3, i64 undef, i64 %5, double undef, double undef, double undef, double undef, double undef, double undef)
  ret void
}

; Function Attrs: nounwind
declare dso_local ghccc void @DeegenInternal_UserLibFunctionTrueEntryPoint_DeegenInternal_ThrowCStringErrorImpl(ptr, ptr, ptr, ptr, i64, ptr, i64, ptr, i64, i64, double, double, double, double, double, double) local_unnamed_addr #1

attributes #0 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
!2 = !{!3, !16, i64 40}
!3 = !{!"_ZTS9CodeBlock", !4, i64 0, !15, i64 24, !12, i64 32, !12, i64 36, !16, i64 40, !12, i64 48, !12, i64 52, !13, i64 56, !13, i64 64, !13, i64 72, !17, i64 80, !7, i64 88}
!4 = !{!"_ZTS14ExecutableCode", !5, i64 0, !10, i64 2, !11, i64 3, !12, i64 4, !13, i64 8, !14, i64 16}
!5 = !{!"_ZTS24SystemHeapGcObjectHeader", !6, i64 0, !9, i64 1}
!6 = !{!"_ZTS14HeapEntityType", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!"_ZTS11GcCellState", !7, i64 0}
!10 = !{!"_ZTSN14ExecutableCode4KindE", !7, i64 0}
!11 = !{!"bool", !7, i64 0}
!12 = !{!"int", !7, i64 0}
!13 = !{!"any pointer", !7, i64 0}
!14 = !{!"_ZTSN14ExecutableCode23InterpreterCallIcAnchorE", !12, i64 0, !12, i64 4}
!15 = !{!"_ZTS15UserHeapPointerI11TableObjectE", !16, i64 0}
!16 = !{!"long", !7, i64 0}
!17 = !{!"_ZTS20SpdsDoublyLinkedListI23JitCallInlineCacheEntryE", !18, i64 0}
!18 = !{!"_ZTS24SpdsDoublyLinkedListNodeI23JitCallInlineCacheEntryE", !19, i64 0, !19, i64 4}
!19 = !{!"_ZTS19SpdsOrSystemHeapPtrI24SpdsDoublyLinkedListNodeI23JitCallInlineCacheEntryEE", !12, i64 0}