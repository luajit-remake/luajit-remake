; ModuleID = 'extracted_ir'
source_filename = "/home/u/project/annotated/unit_test/ic_api_sanity.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.anon.0 = type { i32, i32, i32 }

; Function Attrs: inlinehint mustprogress nounwind uwtable
declare dso_local noundef i32 @"_ZZZ7testfn1ENK3$_0clEvENKUlvE_clEv"(ptr noundef nonnull align 4 dereferenceable(12)) #0 align 2

; Function Attrs: nounwind
declare void @__deegen_inline_cache_decode_ic_state_0(ptr, ptr) #1

; Function Attrs: nounwind
define dso_local i32 @__deegen_inline_cache_effect_0(ptr %0, i32 %1, i32 %2) #2 {
  %4 = alloca %class.anon.0, align 8
  %5 = getelementptr inbounds %class.anon.0, ptr %4, i64 0, i32 1
  call void @__deegen_inline_cache_decode_ic_state_0(ptr %0, ptr nonnull %5)
  store i32 %1, ptr %4, align 8
  %6 = getelementptr inbounds %class.anon.0, ptr %4, i64 0, i32 2
  store i32 %2, ptr %6, align 8
  %7 = call i32 @"_ZZZ7testfn1ENK3$_0clEvENKUlvE_clEv"(ptr %4)
  ret i32 %7
}

attributes #0 = { inlinehint mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind }
attributes #2 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+bmi,+crc32,+cx8,+fsgsbase,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87" "tune-cpu"="generic" }

!llvm.linker.options = !{}
!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 2}
